service: gods-eye

frameworkVersion: "3"

package:
  patterns:
    - "!node_modules/**"
    - "!package-lock.json"
    - "!.venv/**"
    - ".idea/**"

provider:
  name: aws
  region: us-east-1
  runtime: python3.9
  environment:
    OPEN_WEATHER_API_URL: "https://api.openweathermap.org/data/2.5/weather"
    OPEN_WEATHER_API_KEY: "d28f57a0fb0d01a55d9526f463a9bac3"
    GEO_API_URL: "http://api.openweathermap.org/geo/1.0/direct"
    OPEN_WEATHER_API_DAILY_URL: "http://api.openweathermap.org/data/2.5/forecast"
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
          - "events:PutEvents"
          - "events:ListEventBuses"
          Resource: "*"

resources:
  Resources:

    NotificationTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: NotifierTopic
        TopicName: NotifierTopic

    SNSPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Version: '2008-10-17'
          Id: 'topic_policy'
          Statement:
          - Sid: 'AWSEvents_gods_eye_rule'
            Effect: 'Allow'
            Principal:
              Service: events.amazonaws.com
            Action: sns:Publish
            Resource: !Ref NotificationTopic
        Topics:
        - !Ref NotificationTopic

    EventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: NotifierEvent

    EventRule:
      Type: AWS::Events::Rule
      Properties:
        EventBusName: NotifierEvent
        EventPattern:
          source:
            - com.almeidadealmeida.godseye
        Name: NotifierRule
        ScheduleExpression:
        State: "ENABLED"
        Targets:
          - Arn: !Ref NotificationTopic
            Id: "SNSTarget"

functions:
  notifier:
    handler: handler.notifier

plugins:
  - serverless-python-requirements
